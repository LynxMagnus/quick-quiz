@model QuickQuiz.Models.ViewModels.QuestionAnswers

@{
    ViewBag.Title = "Edit Question";
}

<h2>Edit Question</h2>


@using (Html.BeginForm("Edit", "Questions", FormMethod.Post, new { encType = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Question.QuizId)
        @Html.HiddenFor(model => model.Question.QuestionId)
        @Html.HiddenFor(model => model.Question.MarkdownReference)


        <div class="form-group">
            @Html.LabelFor(model => model.Question.Text, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Question.Text, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Question.Text, "", new { @class = "text-danger" })
            </div>
        </div>

        @for (int i = 0; i < Model.Answers.Count; i++)
        {
            @Html.HiddenFor(model => model.Answers[i].AnswerId)
            @Html.HiddenFor(model => model.Answers[i].QuestionId)

            <div class="form-group">
                @Html.LabelFor(model => model.Answers[i].Text, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Answers[i].Text, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Answers[i].Text, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Answers[i].Correct, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Answers[i].Correct)
                        @Html.ValidationMessageFor(model => model.Answers[i].Correct, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        }

        @Html.LabelFor(model => model.Question.MarkdownReference, htmlAttributes: new { @class = "control-label" })
        <div class="input-group" style="margin-bottom:10px;">
            <label class="input-group-btn">
                <span class="btn btn-info">
                    Browse&hellip; <input type="file" name="file" style="display: none;">
                </span>
            </label>
            <input type="text" class="input-file form-control" readonly>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-default" />
            </div>
        </div>
        @Html.ValidationMessageFor(model => model.Question.MarkdownReference, "", new { @class = "text-danger" })
    </div>
}

    <div>
        @Html.ActionLink("Back to List", "Index", new { quizId = Model.Question.QuizId })
    </div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/application")
}
